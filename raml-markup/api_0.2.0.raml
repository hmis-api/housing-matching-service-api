#%RAML 0.8
title: Housing Matching Service
version: 0.2.0
#baseUri: http://server/api/{version}
#baseUri: http://mocksvc.mulesoft.com/mocks/d380eab8-f7d0-48a4-804b-c816753b395a/api/{version}
baseUri: https://mocksvc.mulesoft.com/mocks/d380eab8-f7d0-48a4-804b-c816753b395a/api/{version}
securitySchemes:
    - oauth_2_0:
        description: |
            Supports OAuth 2.0 for authenticating all API requests.
        type: OAuth 2.0
        describedBy:
            headers:
                Authorization:
                    description: |
                       Used to send a valid OAuth 2 access token. Do not use
                       with the "access_token" query string parameter.
                    type: string
                    example: |
                      Authorization: Bearer czZCaGRSa3F0MzpnWDFmQmF0M2JW
            queryParameters:
                access_token:
                    description: |
                       Used to send a valid OAuth 2 access token. Do not use together with
                       the "Authorization" header
                    type: string
            responses:
                401:
                    description: |
                        Bad or expired token. This can happen if the user or Dropbox
                        revoked or expired an access token. To fix, you should re-
                        authenticate the user.
                403:
                    description: |
                        Bad OAuth request (wrong consumer key, bad nonce, expired
                        timestamp...). Unfortunately, re-authenticating the user won't help here.
        settings:
          authorizationUri: https://www.hserv.com/1/oauth2/authorize
          accessTokenUri: https://api.hserv.com/1/oauth2/token
          authorizationGrants: [ code, token ]
mediaType: application/json
/health:
  displayName: Get health status of the service.
  get:
    description: Returns the health status of the Micro Service.
    responses:
      200:
        body:
          example : |
            {
             "status":"ok"
            }
/matches:
  displayName: Trigger the matching process once score calculation is done.
  post:
    description: |
      Use this API to trigger the matching process once score calculation is done. Posting an empty body would suffice.
    responses:
      200:
        body:
          example : |
            {
             "triggered":"ok"
            }
      403 :
        body:
          example : |
            {
              "error": "Token Not Valid"
            }
  get:
    description: Get the list of the proposed matches.
    responses:
      200:
        body:
          example : |
                    {
                       "links":[
                          {
                             "rel":"first",
                             "href":"https://www.hmislynk.com/house-matching-api/matches?page=0&size=1"
                          },
                          {
                             "rel":"self",
                             "href":"https://www.hmislynk.com/house-matching-api/matches?size=1"
                          },
                          {
                             "rel":"next",
                             "href":"https://www.hmislynk.com/house-matching-api/matches?page=1&size=1"
                          },
                          {
                             "rel":"last",
                             "href":"https://www.hmislynk.com/house-matching-api/matches?page=1&size=1"
                          }
                       ],
                       "content":[
                          {
                             "reservationId":"f396b640-faf6-4f2f-98db-26a0c84c8e4f",
                             "eligibleClients":{
                                "clientId":"91dbc8c3-6df6-4702-9733-c84dd67bf1ed",
                                "surveyScore":10,
                                "matched":false,
                                "surveyDate":"09-29-2016 11:05"
                             },
                             "housingUnitId": "b6e0ecb6-a665-4e95-847f-ec37529a53fb",
                             "matchDate":"2016-10-07",
                             "manualMatch":false,
                             "inactive":false,
                             "dateCreated":"10-25-2016 15:24",
                             "dateUpdated":"10-25-2016 15:24",
                             "userId":"74fe590d-9389-4936-abef-1c18fbf14750",
                             "links":[
                                {
                                   "rel":"history",
                                   "href":"/matches/client/91dbc8c3-6df6-4702-9733-c84dd67bf1ed/status"
                                }
                             ]
                          }
                       ],
                       "page":{
                          "size":1,
                          "totalElements":2,
                          "totalPages":2
                       }
                    }
      403 :
        body:
          example : |
            {
              "error": "Token Not Valid"
            }
    
  delete:
    description: |
      Clear all the proposed matches.
    responses:
      200:
        body:
          example : |
            {
             "deleted":"ok"
            }
      403 :
        body:
          example : |
            {
              "error": "Token Not Valid"
            }
  /client/{id}:
    displayName: Perform operations based on the client id.
    uriParameters:
      id:
        description: id of the client.
        type: string
    get:
      description: Get the proposed matche for a client_id.
      responses:
        200:
          body:
            example : |
              {
                    "reservation_id":"12345",
                    "client_id": "456788",
                    "housing_unit_id": "09876",
                    "match_date": "2016-10-10",
                    "dateCreated":"10-25-2016 15:24",
                    "dateUpdated":"10-25-2016 15:24",
                    "userId":"74fe590d-9389-4936-abef-1c18fbf14750",
                    "matchedStatus": "true"
              }
        403 :
          body:
            example : |
              {
                "error": "Token Not Valid"
              }
    delete:
      description: |
        Clears off the proposed match for a particular client.
      responses:
        200:
          body:
            example : |
              {
               "deleted":"ok"
              }
        403 :
          body:
            example : |
              {
                "error": "Token Not Valid"
              }
    put:
      description: |
        Used for updating/accepting the match for a client id.
      body:
        application/json:
            example : |
              {
                    "reservation_id":"12345",
                    "client_id": "456788",
                    "housing_unit_id": "09876",
                    "match_date": "2016-10-10",
                    "matchedStatus": "false"
              }
      responses:
        200:
          body:
            example : |
              {
               "matched":"ok"
              }
        403 :
          body:
            example : |
              {
                "error": "Token Not Valid"
              }
/scores:
  displayName: Trigger score totalling once survey responses are ready.
  post:
    description: |
      Trigger score totalling via POST. An Empty body request would suffice.
    responses:
      200:
        body:
          example : |
            {
             "triggered":"ok"
            }
      403 :
        body:
          example : |
            {
              "error": "Token Not Valid"
            }
      409:
        body: 
          example: |
                  {
                     "error":[
                        {
                           "code":"SCORE_PROCESSING_IN_PROGRESS",
                           "message":"Score processing currently in progress."
                        }
                     ]
                  }
  get:
    description: Get the list of clients and their survey scores.
    responses:
      200:
        body:
          example : |
                  {
                     "links":[
                        {
                           "rel":"first",
                           "href":"http://localhost:8080/housing-matching/scores?page=0&size=20"
                        },
                        {
                           "rel":"self",
                           "href":"http://localhost:8080/housing-matching/scores"
                        },
                        {
                           "rel":"next",
                           "href":"http://localhost:8080/housing-matching/scores?page=1&size=20"
                        },
                        {
                           "rel":"last",
                           "href":"http://localhost:8080/housing-matching/scores?page=1&size=20"
                        }
                     ],
                     "content":[
                        {
                           "clientId":"90f5b14f-08e1-4999-9ca3-ee7c82c0f054",
                           "surveyScore":134,
                           "programType":"PSH",
                           "matched":false,
                           "cocScore":12,
                           "dateCreated":"10-25-2016 15:24",
                           "dateUpdated":"10-25-2016 15:24",
                           "userId":"74fe590d-9389-4936-abef-1c18fbf14750",
                           "spdatLabel":"YOUTH"
                        },
                        {
                           "clientId":"9346eb6b-1a33-44a7-b997-4cfe516450d7",
                           "surveyScore":247,
                           "programType":"PSH",
                           "matched":false,
                           "cocScore":65,
                           "dateCreated":"10-25-2016 15:24",
                           "dateUpdated":"10-25-2016 15:24",
                           "userId":"74fe590d-9389-4936-abef-1c18fbf14750",
                           "spdatLabel":"YOUTH"
                        },
                        {
                           "clientId":"4c4e0b8e-860c-4daa-a471-a0795835326b",
                           "surveyScore":176,
                           "programType":"PSH",
                           "matched":false,
                           "dateCreated":"10-25-2016 15:24",
                           "dateUpdated":"10-25-2016 15:24",
                           "userId":"74fe590d-9389-4936-abef-1c18fbf14750",                           
                           "spdatLabel":"YOUTH"
                        },
                        {
                           "clientId":"0b421298-9adc-4695-bc2f-18f608d8c153",
                           "surveyScore":128,
                           "programType":"PSH",
                           "matched":false,
                           "dateCreated":"10-25-2016 15:24",
                           "dateUpdated":"10-25-2016 15:24",
                           "userId":"74fe590d-9389-4936-abef-1c18fbf14750",                           
                           "spdatLabel":"YOUTH"
                        }
                     ],
                     "page":{
                        "size":20,
                        "totalElements":31,
                        "totalPages":2
                     }
                  }
      403 :
        body:
          example : |
            {
              "error": "Token Not Valid"
            }
    
  delete:
    description: |
      Clear all the survey scores.
    responses:
      200:
        body:
          example : |
            {
             "deleted":"ok"
            }
      403 :
        body:
          example : |
            {
              "error": "Token Not Valid"
            }
/scores/status:
  get:
    responses: 
      200:
        body: 
          application/json:
            example: |
                      {
                         "startedAt":"11-21-2016 11:09:27.371",
                         "completedAt":"11-18-2016 17:39:24.983",
                         "initiatedBy":"hmisprojects@gmail.com",
                         "status":"COMPLETED"
                      }
/scores/history:
  get:
    responses: 
      200:
        body: 
          application/json:
            example: |
                    {
                       "links":[
                          {
                             "rel":"self",
                             "href":"http://localhost:8080/house-matching-api/bactchprocess/history"
                          }
                       ],
                       "content":[
                          {
                             "startedAt":"11-21-2016 11:09:27.371",
                             "initiatedBy":"hmisprojects@gmail.com",
                             "status":"INPROGRESS",
                             "links":[
                    
                             ]
                          },
                          {
                             "startedAt":"11-19-2016 22:01:54.120",
                             "completedAt":"11-19-2016 22:02:12.037",
                             "initiatedBy":"hmisprojects@gmail.com",
                             "status":"COMPLETED",
                             "links":[
                    
                             ]
                          },
                          {
                             "startedAt":"11-19-2016 22:01:52.428",
                             "completedAt":"11-19-2016 22:02:10.604",
                             "initiatedBy":"hmisprojects@gmail.com",
                             "status":"COMPLETED",
                             "links":[
                    
                             ]
                          },
                          {
                             "startedAt":"11-19-2016 21:57:27.882",
                             "completedAt":"11-19-2016 21:57:45.902",
                             "initiatedBy":"hmisprojects@gmail.com",
                             "status":"COMPLETED",
                             "links":[
                    
                             ]
                          },
                          {
                             "startedAt":"11-19-2016 16:09:58.603",
                             "completedAt":"11-19-2016 16:10:17.350",
                             "initiatedBy":"hmisprojects@gmail.com",
                             "status":"FAILED",
                             "links":[
                    
                             ]
                          },
                          {
                             "startedAt":"11-18-2016 17:39:09.075",
                             "completedAt":"11-18-2016 17:39:24.983",
                             "initiatedBy":"hmisprojects@gmail.com",
                             "status":"COMPLETED",
                             "links":[
                    
                             ]
                          },
                          {
                             "initiatedBy":"hmisprojects@gmail.com",
                             "status":"COMPLETED",
                             "links":[
                    
                             ]
                          },
                          {
                             "initiatedBy":"hmisprojects@gmail.com",
                             "status":"INPROCESS",
                             "links":[
                    
                             ]
                          },
                          {
                             "initiatedBy":"hmisprojects@gmail.com",
                             "status":"COMPLETED",
                             "links":[
                    
                             ]
                          }
                       ],
                       "page":{
                          "size":20,
                          "totalElements":9,
                          "totalPages":1,
                          "number":0
                       }
                    }            
  /client/{id}:
    displayName: Perform operations based on the client id.
    uriParameters:
      id:
        description: id of the client.
        type: string
    get:
      description: Get the survey score for a client_id.
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "client_id":"12345",
                  "survey_score": "12",
                  "survey_type":custom assesssment"
                }
        403 :
          body:
            example : |
              {
                "error": "Token Not Valid"
              }
    delete:
      description: |
        Clears off the survey score for a particular client.
      responses:
        200:
          body:
            example : |
              {
               "deleted":"ok"
              }
        403 :
          body:
            example : |
              {
                "error": "Token Not Valid"
              }
    put:
      description: |
        Used for updating survey score for a client id.
      body:
        application/json:
          example: |
            {
              "client_id":"12345",
              "survey_score": "12",
              "survey_type":custom assesssment"
            }
      responses:
        200:
          body:
            example : |
              {
               "updated":"ok"
              }
        403 :
          body:
            example : |
              {
                "error": "Token Not Valid"
              }
/eligibleclients:
  displayName: Returns a list of Top Eligible Clients
  get:
    description: Returns the most eligible clients.
    queryParameters:
        spdattype:
          type: string
          required: false
        status:
          type: string
          required: false
        sort:
          description: |
                To sort data while retriving. Provide sorting field (if want to sort on multiple fields provide fields with comma separation) and order (asc,desc) with comma separation. 
          example: |
                    https://www.hmislynk.com/house-matching-api/rest/eligibleclients?sort=cocScore,surveyDate,asc
    responses:
      200:
        body:
          example : |
                      {
                         "links":[
                            {
                               "rel":"first",
                               "href":"https://www.hmislynk.com/house-matching-api/eligibleclients?page=0&size=1"
                            },
                            {
                               "rel":"self",
                               "href":"https://www.hmislynk.com/house-matching-api/eligibleclients?size=1"
                            },
                            {
                               "rel":"next",
                               "href":"https://www.hmislynk.com/house-matching-api/eligibleclients?page=1&size=1"
                            },
                            {
                               "rel":"last",
                               "href":"https://www.hmislynk.com/house-matching-api/eligibleclients?page=2&size=1"
                            },
                            {
                               "rel":"scoreprocessingstatus",
                               "href":"https://www.hmislynk.com/house-matching-api/scores/status"
                            },
                            {
                               "rel":"scoreprocessinghistory",
                               "href":"https://www.hmislynk.com/house-matching-api/scores/history"
                            }
                         ],
                         "content":[
                            {
                               "clientId":"91dbc8c3-6df6-4702-9733-c84dd67bf1ed",
                               "surveyScore":10,
                               "matched":false,
                               "surveyDate":"09-29-2016 11:05"
                               "dateCreated":"10-25-2016 15:24",
                               "dateUpdated":"10-25-2016 15:24",
                               "userId":"74fe590d-9389-4936-abef-1c18fbf14750"                              
                            }
                         ],
                         "page":{
                            "size":1,
                            "totalElements":3,
                            "totalPages":3
                         }
                      }    
      403 :
        body:
          example : |
            {
              "error": "Token Not Valid"
            }
  put:
    description: Update client list. Will accept json having updated details of one or more clients.
    body:
      application/json:
        example: |
          {
            "clientId":"0b421298-9adc-4695-bc2f-18f608d8c153",
            "name":"TestUser",
            "spdatScore":"23",
            "surveyDate":"2016-10-10",
            "matchedStatus":true
          }
    responses:
        200:
          body:
            example : |
              {
                "updated":true
              }     
        403 :
          body:
            example : |
              {
                "error": "Token Not Valid"
              }
  post:
    description: | 
              Will add client to the eligible list. Accept json having one or more clients.
              Allowed values for "spdatLabel" field are "FAMILY","YOUTH","SINGLE_ADULT"
    body:
      application/json:
        example: |
              [
                 {
                    "clientId":"0b421298-9adc-4695-bc2f-18f608d8c153",
                    "surveyType":"Survey Type",
                    "surveyScore":5,
                    "programType":"Program Type",
                    "matched":false,
                    "spdatLabel":"YOUTH",
                    "surveyDate":"08-22-2016 11:40",
                    "zipcode":"12345"
                 }
              ]
    responses:
        200:
          body:
            example : |
              {
                "added":true
              }     
        403 :
          body:
            example : |
              {
                "error": "Token Not Valid"
              }
  delete:
    description: Deletes the entire eligible-clients list.



  /{clientid}:
    displayName: Perform operations based on client_id.
    uriParameters:
      clientid:
        description: id of the client.
        type: string
    get:
      description: Fetch a particular client
      responses:
        200:
          body:
            example : |
                      {
                         "clientId":"800fa63b-8278-414c-83f1-5e29740205a0",
                         "surveyScore":10,
                         "matched":false,
                         "surveyDate":"09-03-2016 04:19",
                           "dateCreated":"10-25-2016 15:24",
                           "dateUpdated":"10-25-2016 15:24",
                           "userId":"74fe590d-9389-4936-abef-1c18fbf14750",                         
                         "links":[
                            {
                               "rel":"client",
                               "href":"/hmis-clientapi/rest/v2014/clients/800fa63b-8278-414c-83f1-5e29740205a0"
                            }
                         ]
                      }
        403 :
          body:
            example : |
              {
                "error": "Token Not Valid"
              }
        404 :
          body:
            example : |
              {
                "error": "Resource Not Found"
              }
    delete:
      description: Delete a particular client
      responses:
        200:
          body:
            example : |
              {
                "deleted":true
              }     
        403 :
          body:
            example : |
              {
                "error": "Token Not Valid"
              }
        404 :
          body:
            example : |
              {
                "error": "Resource Not Found"
              }
    put:
      description: |
        This API will be used to modify the deatils of a particular client.
      body:
        application/json:
          example: |
            {
              "client_id":"12345",
              "name":"TestUser",
              "surveyScore":"23",
              "surveyType":"vi-spdat",
              "surveyDate":"2016-10-10",
              "matchedStatus":true
            }
      responses:
        200:
          body:
            example : |
              {
                "updated":true
              }     
        403 :
          body:
            example : |
              {
                "error": "Token Not Valid"
              }
/matches/client/{clientid}/status:
  get:
    description:  TO read a client status history
    responses:
      200:
        body:
          application/json:
            example: |
                      [
                         {
                            "id":"ec501234-c61a-48bd-a85e-580af887a6a4",
                            "clientId":"6f38e63f-7856-4fb1-838f-c03805eab244",
                            "status":3,
                            "statusDescription":"Agency scheduled appointment with Client",
                            "recipients":{
                      
                            },
                            "active":false,
                            "dateCreated":"10-25-2016 15:24",
                            "dateUpdated":"10-25-2016 15:24",
                            "userId":"74fe590d-9389-4936-abef-1c18fbf14750"                         },
                         {
                            "id":"d406dbb7-cda3-4879-9e5d-989d5bc67b16",
                            "clientId":"6f38e63f-7856-4fb1-838f-c03805eab244",
                            "status":2,
                            "statusDescription":"Client is contacted by Agency",
                            "recipients":{
                      
                            },
                            "active":false,
                            "dateCreated":"10-13-2016 02:26:09.066",
                            "dateUpdated":"10-13-2016 02:26:09.066",
                            "userId":"74fe590d-9389-4936-abef-1c18fbf14750"
                         },
                         {
                            "id":"d4c767bc-cb85-44f9-a985-0447292fedf6",
                            "clientId":"6f38e63f-7856-4fb1-838f-c03805eab244",
                            "status":1,
                            "statusDescription":"Email sent to Referral Agency",
                            "recipients":{
                      
                            },
                            "active":false,
                            "dateCreated":"10-13-2016 02:23:59.124",
                            "dateUpdated":"10-13-2016 02:23:59.124",
                            "userId":"74fe590d-9389-4936-abef-1c18fbf14750"
                         }
                      ]
      404:
        body:
          application/json:
            example: |
                  {
                     "error":[
                        {
                           "code":"ERR_CODE_CLIENT_NOT_FOUND",
                           "message":"Client not found"
                        }
                     ]
                  }              
  put:
    description: |
          Updates the status of a client matching. A notification will be triggered to the list of recipients set in the request body (recicipents can be part of TO,CC, BCC). User can provide additional comments as well while updating the status of a specific match. Currently, the following are the statuses that are allowed 
            
            Status 1 - Email sent to Referral Agency 
            Status 2 - Client is contacted by Agency
            Status 3 - Agency scheduled appointment with Client
            Status 4 - Client missed 1st appointment
            Status 5 - Client missed 2nd appointment
            Status 6 - Paperwork initiated by Agency
            Status 7 - Client accepted referral
            Status 8 - Move-in Preparation initiated by Agency
            Status 9 - Client moved in
            Status 10 - Referral is rejected
           
    body:
      application/json:
        example: |
            {
               "status":"1",
               "comments":"forwarding to next level",
               "recipients":[
                   "toRecipients" : [ "agent@gmail.com", "client@hmis.com"],
                   "bccRecipients" : [ "agent@gmail.com", "client@hmis.com"],
                   "ccRecipients" : [ "agent@gmail.com", "client@hmis.com"]
               ]
            }              
        schema: |
                  {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "comments": {
                      "type": "string"
                    },
                    "recipients": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "comments",
                    "recipients"
                  ]
                  }
    responses:
      200:
      404:
        body:
          application/json:
            example: |
                  {
                     "error":[
                        {
                           "code":"ERR_CODE_CLIENT_NOT_FOUND",
                           "message":"Client not found"
                        }
                     ]
                  }
      400:
        body:
          application/json:
            example: |
                  {
                     "error":[
                        {
                           "code":"ERR_CODE_INVALID_STATUS",
                           "message":"Invalid status. Current status 1"
                        }
                     ]
                  }
